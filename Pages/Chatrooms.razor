@page "/chatrooms"
@inject ProtectedSessionStorage ProtectedSessionStore
@using Privas.Connectors

<PageTitle>Chatrooms</PageTitle>

<div id="chatrooms_container">
    <div id="chatrooms_list">
        @foreach (var chatroom in chatrooms) 
        {
            <div class="chatroom">
                <div class="chatroom_name"><b>@chatroom["Name"]</b></div>
                <div class="chatroom_owner_username">Owner: @chatroom["OwnerUsername"]</div>
                <button class="chatroom_join_button">Join</button>
            </div>
        }
    </div>
    <div id="search_holder">
        <input type="text" id="chatroom_search_input" placeholder="Search..." 
            @oninput = "((ChangeEventArgs e) => search = e?.Value?.ToString())"
            @onkeypress = "SearchChatroom"    />
    </div>
</div>

@code {
    private ChatroomConnector chatroomConnector = new();
    private List<MongoDB.Bson.BsonDocument> chatrooms = new();
    private List<MongoDB.Bson.BsonDocument> chatroomsAll = new();
    private string? search;

    private void SearchChatroom(KeyboardEventArgs args)
    {
        if (search == null || search == "") chatrooms = chatroomsAll;

        if (args.Code == "Enter")
        {
            search = search?.ToLower();
            chatrooms = chatrooms.FindAll(chatroom => chatroom["Name"]
            .ToString()
            .ToLower()
            .Contains(search));
        }
    }

    protected async override Task OnInitializedAsync()
    {
        chatrooms = await chatroomConnector.GetAll();
        chatrooms = chatrooms.OrderBy(x => x["Name"]).ToList();
        chatroomsAll = chatrooms;
        StateHasChanged();
    }
}
