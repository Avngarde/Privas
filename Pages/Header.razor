@inject ProtectedLocalStorage localStorage;
@inject NavigationManager NavManager;
@using Privas.Connectors

<header>
    <span>Username: @userName</span>
    <span>User code: @userCode</span>
    <button @onclick="EndSession">End session</button>
</header>

@code {
    private string? userName;
    private string? userCode;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var currentUserName = await localStorage.GetAsync<string>("privas_currentUserName");
        var currentUserCode = await localStorage.GetAsync<string>("privas_currentUserCode");
        userName = currentUserName.Value;
        userCode = currentUserCode.Value;
        StateHasChanged();
    }

    private async Task EndSession()
    {
        MembershipConnector membershipConnector = new();
        ChatroomConnector chatroomConnector = new();
        var currentUserCode = await localStorage.GetAsync<string>("privas_currentUserCode");
        await localStorage.DeleteAsync("privas_currentUserName");
        await localStorage.DeleteAsync("privas_currentUserCode");
        await membershipConnector.Delete(currentUserCode.Value);
        await chatroomConnector.DeleteByUserCode(currentUserCode.Value);
        NavManager.NavigateTo("/");
    }
}