@page "/addchatroom"
@using MongoDB.Bson;
@using Privas.Data;
@using Privas.SupportClasses;
@using Privas.Connectors;
@inject IToastService toastService;
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<PageTitle>AddChatroom</PageTitle>

<div id="add_chatroom_container">
    <div id="form_holder">
        <h1>Add Chatroom</h1>
        <input type="text" value="@name" placeholder="Chatroom name" 
            @oninput = "((ChangeEventArgs e) => name = e?.Value?.ToString())" 
        />
        <input type="text" value="@password" placeholder="Access password" 
            @oninput = "((ChangeEventArgs e) => password = e?.Value?.ToString())" 
        />
        <button id="add_chatroom_submit" @onclick="CreateChatroom">Add!</button>
    </div>
</div>

@code {
    private string? name;
    private string? password;

    private async Task CreateChatroom()
    {
        if (name != null && password != null) 
        {
            toastService.ShowInfo("", "Loading");
            try 
            {
                Chatroom newChatroom = new()
                {
                    Name = name,
                    AccessPassword = password,
                    UniqueCode = UniqueCodeGenerator.Generate(),
                    OwnerUsername = await localStorage.GetItemAsync<string>("privas_currentUserName"),
                    OwnerCode = await localStorage.GetItemAsync<string>("privas_currentUserCode")
                };

                ChatroomConnector connector = new();
                await connector.Add(newChatroom.ToBsonDocument());
                toastService.ClearInfoToasts();
                toastService.ShowSuccess("", "Created Chatroom");
            }
            catch (Exception)
            {
                toastService.ShowError("", "Failed to add chatroom");
            }
        }
        else 
        {
            toastService.ShowInfo("Fill all the required data", "Error");
        }
    }
}